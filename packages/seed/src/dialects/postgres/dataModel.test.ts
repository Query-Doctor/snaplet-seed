import { describe, expect, test } from "vitest";
import { introspectionToDataModel } from "./dataModel.js";
import { introspection } from "./introspect/fixtures/introspection.js";
import { introspectionWithConstraints } from "./introspect/fixtures/introspectionWithUniqueConstraints.js";
import { introspection as sameTableNamesDifferentSchemasIntrospection } from "./introspect/fixtures/same-table-names-different-schemas.js";
import { type IntrospectedStructure } from "./introspect/introspectDatabase.js";

describe("dataModel", () => {
  test("it correctly convert an introspected structure into a data model", () => {
    // arrange
    // act
    const dataModel = introspectionToDataModel(introspection);
    // assert
    expect(dataModel).toEqual({
      enums: {
        AccessTokenType: {
          schemaName: "public",
          values: [
            {
              name: "CLI",
            },
            {
              name: "WORKER",
            },
          ],
        },
        AuditLogActions: {
          schemaName: "public",
          values: [
            {
              name: "EMAIL_SENT_INCOMPLETE_ONBOARDING",
            },
            {
              name: "EMAIL_SENT_ORGANIZATION_CHURN",
            },
            {
              name: "ORGANIZATION_DELETED",
            },
            {
              name: "PREVIEW_DATABASE_CREATED",
            },
            {
              name: "PREVIEW_DATABASE_DEPLOYED",
            },
            {
              name: "PREVIEW_DATABASE_DESTROYED",
            },
            {
              name: "PREVIEW_DATABASE_DROPPED",
            },
            {
              name: "PROJECT_DELETED",
            },
            {
              name: "SNAPSHOT_CONFIG_UPDATED",
            },
            {
              name: "SNAPSHOT_CREATED",
            },
            {
              name: "SNAPSHOT_DELETED",
            },
            {
              name: "SNAPSHOT_RESTORED_FAILURE",
            },
            {
              name: "SNAPSHOT_RESTORED_SUCCESS",
            },
          ],
        },
        DatabaseStatus: {
          schemaName: "public",
          values: [
            {
              name: "DELETED",
            },
            {
              name: "DISABLED",
            },
            {
              name: "ENABLED",
            },
          ],
        },
        MemberRole: {
          schemaName: "public",
          values: [
            {
              name: "ADMIN",
            },
            {
              name: "MEMBER",
            },
            {
              name: "OWNER",
            },
          ],
        },
        PredictionsEngine: {
          schemaName: "public",
          values: [
            {
              name: "FINETUNED_BERT",
            },
          ],
        },
        ReleaseChannel: {
          schemaName: "public",
          values: [
            {
              name: "BETA",
            },
            {
              name: "PRIVATE",
            },
            {
              name: "PUBLIC",
            },
          ],
        },
        SnapshotStatus: {
          schemaName: "public",
          values: [
            {
              name: "BOOTING",
            },
            {
              name: "DELETED",
            },
            {
              name: "FAILURE",
            },
            {
              name: "IN_PROGRESS",
            },
            {
              name: "PENDING",
            },
            {
              name: "PURGED",
            },
            {
              name: "STARTED",
            },
            {
              name: "STARTING",
            },
            {
              name: "SUCCESS",
            },
            {
              name: "TIMEOUT",
            },
          ],
        },
        UserNotifications: {
          schemaName: "public",
          values: [
            {
              name: "EMAIL",
            },
            {
              name: "NONE",
            },
          ],
        },
        UserRole: {
          schemaName: "public",
          values: [
            {
              name: "ADMIN",
            },
            {
              name: "SUPERUSER",
            },
            {
              name: "USER",
            },
          ],
        },
        job_state: {
          schemaName: "pgboss",
          values: [
            {
              name: "active",
            },
            {
              name: "cancelled",
            },
            {
              name: "completed",
            },
            {
              name: "created",
            },
            {
              name: "expired",
            },
            {
              name: "failed",
            },
            {
              name: "retry",
            },
          ],
        },
      },
      models: {
        AccessToken: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.AccessToken.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "hash",
              hasDefaultValue: false,
              id: "public.AccessToken.hash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "hash",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.AccessToken.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.AccessToken.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "type",
              hasDefaultValue: true,
              id: "public.AccessToken.type",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "type",
              sequence: false,
              type: "AccessTokenType",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.AccessToken.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "userAgent",
              hasDefaultValue: false,
              id: "public.AccessToken.userAgent",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "userAgent",
              sequence: false,
              type: "text",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.AccessToken.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "AccessTokenToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ExecTask",
              relationFromFields: [],
              relationName: "ExecTaskToAccessToken",
              relationToFields: [],
              sequence: false,
              type: "ExecTask",
            },
          ],
          id: "public.AccessToken",
          schemaName: "public",
          tableName: "AccessToken",
          uniqueConstraints: [],
        },
        AuditLog: {
          fields: [
            {
              columnName: "action",
              hasDefaultValue: false,
              id: "public.AuditLog.action",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "action",
              sequence: false,
              type: "AuditLogActions",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.AuditLog.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "public.AuditLog.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.AuditLog.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.AuditLog.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.AuditLog.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.AuditLog.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "AuditLogToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "AuditLogToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "AuditLogToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
          ],
          id: "public.AuditLog",
          schemaName: "public",
          tableName: "AuditLog",
          uniqueConstraints: [],
        },
        AwsConsumptionHistory: {
          fields: [
            {
              columnName: "awsComputeTimeSeconds",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.awsComputeTimeSeconds",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "awsComputeTimeSeconds",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "awsDataTransferBytes",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.awsDataTransferBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "awsDataTransferBytes",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "awsStorageBytes",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.awsStorageBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "awsStorageBytes",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "endPeriod",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.endPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "endPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.name",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.organizationId",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "startPeriod",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.startPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "AwsConsumptionHistoryToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "AwsConsumptionHistoryToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "AwsConsumptionHistoryToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.AwsConsumptionHistory",
          schemaName: "public",
          tableName: "AwsConsumptionHistory",
          uniqueConstraints: [],
        },
        DatabaseProvider: {
          fields: [
            {
              columnName: "defaultSnapshotConfig",
              hasDefaultValue: false,
              id: "public.DatabaseProvider.defaultSnapshotConfig",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "defaultSnapshotConfig",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "domain",
              hasDefaultValue: false,
              id: "public.DatabaseProvider.domain",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "domain",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "public.DatabaseProvider.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.DatabaseProvider.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "DbConnection",
              relationFromFields: [],
              relationName: "DbConnectionToDatabaseProvider",
              relationToFields: [],
              sequence: false,
              type: "DbConnection",
            },
          ],
          id: "public.DatabaseProvider",
          schemaName: "public",
          tableName: "DatabaseProvider",
          uniqueConstraints: [],
        },
        DbConnection: {
          fields: [
            {
              columnName: "connectionUrlHash",
              hasDefaultValue: false,
              id: "public.DbConnection.connectionUrlHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "connectionUrlHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "databaseProviderId",
              hasDefaultValue: false,
              id: "public.DbConnection.databaseProviderId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "databaseProviderId",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.DbConnection.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.DbConnection.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.DbConnection.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "ssl",
              hasDefaultValue: true,
              id: "public.DbConnection.ssl",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "ssl",
              sequence: false,
              type: "bool",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DatabaseProvider",
              relationFromFields: ["databaseProviderId"],
              relationName: "DbConnectionToDatabaseProvider",
              relationToFields: ["id"],
              sequence: false,
              type: "DatabaseProvider",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "DbConnectionToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project_Project_dbConnectionIdToDbConnection",
              relationFromFields: [],
              relationName: "Project_dbConnectionIdToDbConnection",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project_Project_hostedDbUrlIdToDbConnection",
              relationFromFields: [],
              relationName: "Project_hostedDbUrlIdToDbConnection",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToDbConnection",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.DbConnection",
          schemaName: "public",
          tableName: "DbConnection",
          uniqueConstraints: [],
        },
        ExecTask: {
          fields: [
            {
              columnName: "accessTokenId",
              hasDefaultValue: false,
              id: "public.ExecTask.accessTokenId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "accessTokenId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "arn",
              hasDefaultValue: false,
              id: "public.ExecTask.arn",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "arn",
              sequence: false,
              type: "text",
            },
            {
              columnName: "command",
              hasDefaultValue: false,
              id: "public.ExecTask.command",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "command",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.ExecTask.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "endedAt",
              hasDefaultValue: false,
              id: "public.ExecTask.endedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "endedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "env",
              hasDefaultValue: false,
              id: "public.ExecTask.env",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "env",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "exitCode",
              hasDefaultValue: false,
              id: "public.ExecTask.exitCode",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "exitCode",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.ExecTask.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "needsSourceDatabaseUrl",
              hasDefaultValue: true,
              id: "public.ExecTask.needsSourceDatabaseUrl",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "needsSourceDatabaseUrl",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "progress",
              hasDefaultValue: false,
              id: "public.ExecTask.progress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "progress",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.ExecTask.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: true,
              id: "public.ExecTask.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "AccessToken",
              relationFromFields: ["accessTokenId"],
              relationName: "ExecTaskToAccessToken",
              relationToFields: ["id"],
              sequence: false,
              type: "AccessToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "ExecTaskToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToExecTask",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.ExecTask",
          schemaName: "public",
          tableName: "ExecTask",
          uniqueConstraints: [],
        },
        InviteToken: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.InviteToken.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "createdByUserId",
              hasDefaultValue: false,
              id: "public.InviteToken.createdByUserId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdByUserId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "expiresAt",
              hasDefaultValue: false,
              id: "public.InviteToken.expiresAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "expiresAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.InviteToken.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "token",
              hasDefaultValue: false,
              id: "public.InviteToken.token",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "token",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.InviteToken.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "usedByMemberId",
              hasDefaultValue: false,
              id: "public.InviteToken.usedByMemberId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "usedByMemberId",
              sequence: false,
              type: "int4",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Member",
              relationFromFields: ["usedByMemberId"],
              relationName: "InviteTokenToMember",
              relationToFields: ["id"],
              sequence: false,
              type: "Member",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "InviteTokenToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "User",
              relationFromFields: ["createdByUserId"],
              relationName: "InviteTokenToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
          ],
          id: "public.InviteToken",
          schemaName: "public",
          tableName: "InviteToken",
          uniqueConstraints: [],
        },
        Member: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Member.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "public.Member.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Member.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "role",
              hasDefaultValue: true,
              id: "public.Member.role",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "role",
              sequence: false,
              type: "MemberRole",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Member.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.Member.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "MemberToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "MemberToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "InviteToken",
              relationFromFields: [],
              relationName: "InviteTokenToMember",
              relationToFields: [],
              sequence: false,
              type: "InviteToken",
            },
          ],
          id: "public.Member",
          schemaName: "public",
          tableName: "Member",
          uniqueConstraints: [],
        },
        NeonConsumptionHistory: {
          fields: [
            {
              columnName: "endPeriod",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.endPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "endPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.name",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "neonActiveTimeSeconds",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonActiveTimeSeconds",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonActiveTimeSeconds",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "neonComputeTimeSeconds",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonComputeTimeSeconds",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonComputeTimeSeconds",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "neonDataStorageBytesHour",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonDataStorageBytesHour",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonDataStorageBytesHour",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "neonDataTransferBytes",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonDataTransferBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonDataTransferBytes",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "neonSyntheticStorageSize",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonSyntheticStorageSize",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonSyntheticStorageSize",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "neonWrittenDataBytes",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonWrittenDataBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonWrittenDataBytes",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.organizationId",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "startPeriod",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.startPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "NeonConsumptionHistoryToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "NeonConsumptionHistoryToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "NeonConsumptionHistoryToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.NeonConsumptionHistory",
          schemaName: "public",
          tableName: "NeonConsumptionHistory",
          uniqueConstraints: [],
        },
        NeonProject: {
          fields: [
            {
              columnName: "connectionUrlHash",
              hasDefaultValue: false,
              id: "public.NeonProject.connectionUrlHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "connectionUrlHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.NeonProject.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.NeonProject.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "neonProjectId",
              hasDefaultValue: false,
              id: "public.NeonProject.neonProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "neonProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.NeonProject.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.NeonProject.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "NeonProjectToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "PreviewDatabase",
              relationFromFields: [],
              relationName: "PreviewDatabaseToNeonProject",
              relationToFields: [],
              sequence: false,
              type: "PreviewDatabase",
            },
          ],
          id: "public.NeonProject",
          schemaName: "public",
          tableName: "NeonProject",
          uniqueConstraints: [],
        },
        Organization: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Organization.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "deleted",
              hasDefaultValue: true,
              id: "public.Organization.deleted",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "deleted",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Organization.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.Organization.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "pricingPlanId",
              hasDefaultValue: false,
              id: "public.Organization.pricingPlanId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "pricingPlanId",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "subscriptionData",
              hasDefaultValue: false,
              id: "public.Organization.subscriptionData",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "subscriptionData",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Organization.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "PricingPlan",
              relationFromFields: ["pricingPlanId"],
              relationName: "OrganizationToPricingPlan",
              relationToFields: ["id"],
              sequence: false,
              type: "PricingPlan",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AuditLog",
              relationFromFields: [],
              relationName: "AuditLogToOrganization",
              relationToFields: [],
              sequence: false,
              type: "AuditLog",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AwsConsumptionHistory",
              relationFromFields: [],
              relationName: "AwsConsumptionHistoryToOrganization",
              relationToFields: [],
              sequence: false,
              type: "AwsConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "DbConnection",
              relationFromFields: [],
              relationName: "DbConnectionToOrganization",
              relationToFields: [],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "InviteToken",
              relationFromFields: [],
              relationName: "InviteTokenToOrganization",
              relationToFields: [],
              sequence: false,
              type: "InviteToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Member",
              relationFromFields: [],
              relationName: "MemberToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Member",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonConsumptionHistory",
              relationFromFields: [],
              relationName: "NeonConsumptionHistoryToOrganization",
              relationToFields: [],
              sequence: false,
              type: "NeonConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: [],
              relationName: "ProjectToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Table",
              relationFromFields: [],
              relationName: "TableToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Table",
            },
          ],
          id: "public.Organization",
          schemaName: "public",
          tableName: "Organization",
          uniqueConstraints: [],
        },
        PredictionDataSet: {
          fields: [
            {
              columnName: "context",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.context",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "context",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.PredictionDataSet.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "input",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.input",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "input",
              sequence: false,
              type: "text",
            },
            {
              columnName: "shape",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.shape",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "shape",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
          ],
          id: "public.PredictionDataSet",
          schemaName: "public",
          tableName: "PredictionDataSet",
          uniqueConstraints: [],
        },
        PredictionJob: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.PredictionJob.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "endedAt",
              hasDefaultValue: false,
              id: "public.PredictionJob.endedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "endedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "engine",
              hasDefaultValue: true,
              id: "public.PredictionJob.engine",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "engine",
              sequence: false,
              type: "PredictionsEngine",
            },
            {
              columnName: "engineInput",
              hasDefaultValue: false,
              id: "public.PredictionJob.engineInput",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "engineInput",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.PredictionJob.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "progress",
              hasDefaultValue: false,
              id: "public.PredictionJob.progress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "progress",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "rawInput",
              hasDefaultValue: false,
              id: "public.PredictionJob.rawInput",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "rawInput",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.PredictionJob.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: [],
              relationName: "ProjectToPredictionJob",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
          ],
          id: "public.PredictionJob",
          schemaName: "public",
          tableName: "PredictionJob",
          uniqueConstraints: [],
        },
        PreviewDatabase: {
          fields: [
            {
              columnName: "connectionUrlHash",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.connectionUrlHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "connectionUrlHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.PreviewDatabase.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "neonBranchId",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.neonBranchId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "neonBranchId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "neonProjectId",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.neonProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "neonProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "NeonProject",
              relationFromFields: ["neonProjectId"],
              relationName: "PreviewDatabaseToNeonProject",
              relationToFields: ["id"],
              sequence: false,
              type: "NeonProject",
            },
          ],
          id: "public.PreviewDatabase",
          schemaName: "public",
          tableName: "PreviewDatabase",
          uniqueConstraints: [],
        },
        PricingPlan: {
          fields: [
            {
              columnName: "amount",
              hasDefaultValue: false,
              id: "public.PricingPlan.amount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "amount",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "public.PricingPlan.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "isDefault",
              hasDefaultValue: false,
              id: "public.PricingPlan.isDefault",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "isDefault",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.PricingPlan.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "processLimit",
              hasDefaultValue: false,
              id: "public.PricingPlan.processLimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "processLimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "productId",
              hasDefaultValue: false,
              id: "public.PricingPlan.productId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "productId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "restoreLimit",
              hasDefaultValue: false,
              id: "public.PricingPlan.restoreLimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "restoreLimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "storageLimit",
              hasDefaultValue: false,
              id: "public.PricingPlan.storageLimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "storageLimit",
              sequence: false,
              type: "int4",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Organization",
              relationFromFields: [],
              relationName: "OrganizationToPricingPlan",
              relationToFields: [],
              sequence: false,
              type: "Organization",
            },
          ],
          id: "public.PricingPlan",
          schemaName: "public",
          tableName: "PricingPlan",
          uniqueConstraints: [],
        },
        Project: {
          fields: [
            {
              columnName: "autoDeleteDays",
              hasDefaultValue: true,
              id: "public.Project.autoDeleteDays",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "autoDeleteDays",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Project.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "dbConnectionId",
              hasDefaultValue: false,
              id: "public.Project.dbConnectionId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbConnectionId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "dbInfo",
              hasDefaultValue: false,
              id: "public.Project.dbInfo",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbInfo",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "dbInfoLastUpdate",
              hasDefaultValue: false,
              id: "public.Project.dbInfoLastUpdate",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbInfoLastUpdate",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "deleted",
              hasDefaultValue: true,
              id: "public.Project.deleted",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "deleted",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "hostedDbRegion",
              hasDefaultValue: false,
              id: "public.Project.hostedDbRegion",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "hostedDbRegion",
              sequence: false,
              type: "text",
            },
            {
              columnName: "hostedDbUrlId",
              hasDefaultValue: false,
              id: "public.Project.hostedDbUrlId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "hostedDbUrlId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Project.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.Project.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Project.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "predictionJobId",
              hasDefaultValue: false,
              id: "public.Project.predictionJobId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "predictionJobId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "preseedPreviewDatabases",
              hasDefaultValue: true,
              id: "public.Project.preseedPreviewDatabases",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "preseedPreviewDatabases",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "previewDatabaseRegion",
              hasDefaultValue: false,
              id: "public.Project.previewDatabaseRegion",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "previewDatabaseRegion",
              sequence: false,
              type: "text",
            },
            {
              columnName: "runTaskOptions",
              hasDefaultValue: false,
              id: "public.Project.runTaskOptions",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "runTaskOptions",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "schedule",
              hasDefaultValue: false,
              id: "public.Project.schedule",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "schedule",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "scheduleTags",
              hasDefaultValue: true,
              id: "public.Project.scheduleTags",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "scheduleTags",
              sequence: false,
              type: "text[]",
            },
            {
              columnName: "snapshotConfig",
              hasDefaultValue: false,
              id: "public.Project.snapshotConfig",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotConfig",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "supabaseProjectId",
              hasDefaultValue: false,
              id: "public.Project.supabaseProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Project.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DbConnection_Project_dbConnectionIdToDbConnection",
              relationFromFields: ["dbConnectionId"],
              relationName: "Project_dbConnectionIdToDbConnection",
              relationToFields: ["id"],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DbConnection_Project_hostedDbUrlIdToDbConnection",
              relationFromFields: ["hostedDbUrlId"],
              relationName: "Project_hostedDbUrlIdToDbConnection",
              relationToFields: ["id"],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "ProjectToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "PredictionJob",
              relationFromFields: ["predictionJobId"],
              relationName: "ProjectToPredictionJob",
              relationToFields: ["id"],
              sequence: false,
              type: "PredictionJob",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "SupabaseProject",
              relationFromFields: ["supabaseProjectId"],
              relationName: "ProjectToSupabaseProject",
              relationToFields: ["id"],
              sequence: false,
              type: "SupabaseProject",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AuditLog",
              relationFromFields: [],
              relationName: "AuditLogToProject",
              relationToFields: [],
              sequence: false,
              type: "AuditLog",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AwsConsumptionHistory",
              relationFromFields: [],
              relationName: "AwsConsumptionHistoryToProject",
              relationToFields: [],
              sequence: false,
              type: "AwsConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ExecTask",
              relationFromFields: [],
              relationName: "ExecTaskToProject",
              relationToFields: [],
              sequence: false,
              type: "ExecTask",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonConsumptionHistory",
              relationFromFields: [],
              relationName: "NeonConsumptionHistoryToProject",
              relationToFields: [],
              sequence: false,
              type: "NeonConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToProject",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.Project",
          schemaName: "public",
          tableName: "Project",
          uniqueConstraints: [],
        },
        ReleaseVersion: {
          fields: [
            {
              columnName: "channel",
              hasDefaultValue: true,
              id: "public.ReleaseVersion.channel",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "channel",
              sequence: false,
              type: "ReleaseChannel",
            },
            {
              columnName: "forceUpgrade",
              hasDefaultValue: true,
              id: "public.ReleaseVersion.forceUpgrade",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "forceUpgrade",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "releaseDate",
              hasDefaultValue: true,
              id: "public.ReleaseVersion.releaseDate",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "releaseDate",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.ReleaseVersion.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "version",
              hasDefaultValue: false,
              id: "public.ReleaseVersion.version",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "version",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "ReleaseVersionToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
          ],
          id: "public.ReleaseVersion",
          schemaName: "public",
          tableName: "ReleaseVersion",
          uniqueConstraints: [],
        },
        ShapePredictionStore: {
          fields: [
            {
              columnName: "confidence",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.confidence",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "confidence",
              sequence: false,
              type: "float8",
            },
            {
              columnName: "confidenceContext",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.confidenceContext",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "confidenceContext",
              sequence: false,
              type: "float8",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.ShapePredictionStore.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "engine",
              hasDefaultValue: true,
              id: "public.ShapePredictionStore.engine",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "engine",
              sequence: false,
              type: "PredictionsEngine",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "input",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.input",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "input",
              sequence: false,
              type: "text",
            },
            {
              columnName: "overrideContext",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.overrideContext",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "overrideContext",
              sequence: false,
              type: "text",
            },
            {
              columnName: "overrideLabel",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.overrideLabel",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "overrideLabel",
              sequence: false,
              type: "text",
            },
            {
              columnName: "predictedContext",
              hasDefaultValue: true,
              id: "public.ShapePredictionStore.predictedContext",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "predictedContext",
              sequence: false,
              type: "text",
            },
            {
              columnName: "predictedLabel",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.predictedLabel",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "predictedLabel",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
          ],
          id: "public.ShapePredictionStore",
          schemaName: "public",
          tableName: "ShapePredictionStore",
          uniqueConstraints: [],
        },
        Snapshot: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Snapshot.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "createdByUserId",
              hasDefaultValue: false,
              id: "public.Snapshot.createdByUserId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "createdByUserId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "dbConnectionId",
              hasDefaultValue: false,
              id: "public.Snapshot.dbConnectionId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbConnectionId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "dbInfo",
              hasDefaultValue: false,
              id: "public.Snapshot.dbInfo",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbInfo",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "dbSchemaDump",
              hasDefaultValue: false,
              id: "public.Snapshot.dbSchemaDump",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbSchemaDump",
              sequence: false,
              type: "text",
            },
            {
              columnName: "deletedAt",
              hasDefaultValue: false,
              id: "public.Snapshot.deletedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "deletedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "errors",
              hasDefaultValue: false,
              id: "public.Snapshot.errors",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "errors",
              sequence: false,
              type: "text[]",
            },
            {
              columnName: "execTaskId",
              hasDefaultValue: false,
              id: "public.Snapshot.execTaskId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "execTaskId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "failureCount",
              hasDefaultValue: true,
              id: "public.Snapshot.failureCount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "failureCount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Snapshot.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "isScheduled",
              hasDefaultValue: true,
              id: "public.Snapshot.isScheduled",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "isScheduled",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "logs",
              hasDefaultValue: false,
              id: "public.Snapshot.logs",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "logs",
              sequence: false,
              type: "text[]",
            },
            {
              columnName: "notifyOnSuccess",
              hasDefaultValue: true,
              id: "public.Snapshot.notifyOnSuccess",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "notifyOnSuccess",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Snapshot.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "progress",
              hasDefaultValue: false,
              id: "public.Snapshot.progress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "progress",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.Snapshot.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "purgedAt",
              hasDefaultValue: false,
              id: "public.Snapshot.purgedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "purgedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "restoreCount",
              hasDefaultValue: true,
              id: "public.Snapshot.restoreCount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "restoreCount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "runtime",
              hasDefaultValue: false,
              id: "public.Snapshot.runtime",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "runtime",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "snapshotConfig",
              hasDefaultValue: false,
              id: "public.Snapshot.snapshotConfig",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotConfig",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "status",
              hasDefaultValue: true,
              id: "public.Snapshot.status",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "status",
              sequence: false,
              type: "SnapshotStatus",
            },
            {
              columnName: "storage",
              hasDefaultValue: false,
              id: "public.Snapshot.storage",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "storage",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "summary",
              hasDefaultValue: false,
              id: "public.Snapshot.summary",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "summary",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "uniqueName",
              hasDefaultValue: false,
              id: "public.Snapshot.uniqueName",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "uniqueName",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Snapshot.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "workerIpAddress",
              hasDefaultValue: false,
              id: "public.Snapshot.workerIpAddress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "workerIpAddress",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DbConnection",
              relationFromFields: ["dbConnectionId"],
              relationName: "SnapshotToDbConnection",
              relationToFields: ["id"],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "ExecTask",
              relationFromFields: ["execTaskId"],
              relationName: "SnapshotToExecTask",
              relationToFields: ["id"],
              sequence: false,
              type: "ExecTask",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "SnapshotToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "SnapshotToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "User",
              relationFromFields: ["createdByUserId"],
              relationName: "SnapshotToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AwsConsumptionHistory",
              relationFromFields: [],
              relationName: "AwsConsumptionHistoryToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "AwsConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonConsumptionHistory",
              relationFromFields: [],
              relationName: "NeonConsumptionHistoryToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "NeonConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonProject",
              relationFromFields: [],
              relationName: "NeonProjectToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "NeonProject",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Table",
              relationFromFields: [],
              relationName: "TableToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "Table",
            },
          ],
          id: "public.Snapshot",
          schemaName: "public",
          tableName: "Snapshot",
          uniqueConstraints: [],
        },
        SupabaseProject: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.SupabaseProject.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.SupabaseProject.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.SupabaseProject.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "supabaseAccessTokenExpiresAt",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseAccessTokenExpiresAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseAccessTokenExpiresAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "supabaseAccessTokenHash",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseAccessTokenHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseAccessTokenHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "supabaseAuthCodeHash",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseAuthCodeHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "supabaseAuthCodeHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "supabaseProjectId",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "supabaseRefreshToken",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseRefreshToken",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseRefreshToken",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: true,
              id: "public.SupabaseProject.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: [],
              relationName: "ProjectToSupabaseProject",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
          ],
          id: "public.SupabaseProject",
          schemaName: "public",
          tableName: "SupabaseProject",
          uniqueConstraints: [],
        },
        Table: {
          fields: [
            {
              columnName: "bucketKey",
              hasDefaultValue: false,
              id: "public.Table.bucketKey",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "bucketKey",
              sequence: false,
              type: "text",
            },
            {
              columnName: "bytes",
              hasDefaultValue: false,
              id: "public.Table.bytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "bytes",
              sequence: false,
              type: "text",
            },
            {
              columnName: "checksum",
              hasDefaultValue: false,
              id: "public.Table.checksum",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "checksum",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Table.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Table.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "rows",
              hasDefaultValue: false,
              id: "public.Table.rows",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "rows",
              sequence: false,
              type: "text",
            },
            {
              columnName: "schema",
              hasDefaultValue: false,
              id: "public.Table.schema",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "schema",
              sequence: false,
              type: "text",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.Table.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "status",
              hasDefaultValue: true,
              id: "public.Table.status",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "status",
              sequence: false,
              type: "SnapshotStatus",
            },
            {
              columnName: "tableName",
              hasDefaultValue: false,
              id: "public.Table.tableName",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "tableName",
              sequence: false,
              type: "text",
            },
            {
              columnName: "timeToCompress",
              hasDefaultValue: false,
              id: "public.Table.timeToCompress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToCompress",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "timeToDump",
              hasDefaultValue: false,
              id: "public.Table.timeToDump",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToDump",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "timeToEncrypt",
              hasDefaultValue: false,
              id: "public.Table.timeToEncrypt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToEncrypt",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "timeToSave",
              hasDefaultValue: false,
              id: "public.Table.timeToSave",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToSave",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "totalRows",
              hasDefaultValue: false,
              id: "public.Table.totalRows",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "totalRows",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "TableToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "TableToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.Table",
          schemaName: "public",
          tableName: "Table",
          uniqueConstraints: [],
        },
        User: {
          fields: [
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.User.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "email",
              hasDefaultValue: false,
              id: "public.User.email",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "email",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.User.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "notifications",
              hasDefaultValue: true,
              id: "public.User.notifications",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "notifications",
              sequence: false,
              type: "UserNotifications",
            },
            {
              columnName: "role",
              hasDefaultValue: true,
              id: "public.User.role",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "role",
              sequence: false,
              type: "UserRole",
            },
            {
              columnName: "sub",
              hasDefaultValue: false,
              id: "public.User.sub",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "sub",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.User.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AccessToken",
              relationFromFields: [],
              relationName: "AccessTokenToUser",
              relationToFields: [],
              sequence: false,
              type: "AccessToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AuditLog",
              relationFromFields: [],
              relationName: "AuditLogToUser",
              relationToFields: [],
              sequence: false,
              type: "AuditLog",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "InviteToken",
              relationFromFields: [],
              relationName: "InviteTokenToUser",
              relationToFields: [],
              sequence: false,
              type: "InviteToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Member",
              relationFromFields: [],
              relationName: "MemberToUser",
              relationToFields: [],
              sequence: false,
              type: "Member",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ReleaseVersion",
              relationFromFields: [],
              relationName: "ReleaseVersionToUser",
              relationToFields: [],
              sequence: false,
              type: "ReleaseVersion",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToUser",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.User",
          schemaName: "public",
          tableName: "User",
          uniqueConstraints: [],
        },
        _prisma_migrations: {
          fields: [
            {
              columnName: "applied_steps_count",
              hasDefaultValue: true,
              id: "public._prisma_migrations.applied_steps_count",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "applied_steps_count",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "checksum",
              hasDefaultValue: false,
              id: "public._prisma_migrations.checksum",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "checksum",
              sequence: false,
              type: "varchar",
            },
            {
              columnName: "finished_at",
              hasDefaultValue: false,
              id: "public._prisma_migrations.finished_at",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "finished_at",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public._prisma_migrations.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "varchar",
            },
            {
              columnName: "logs",
              hasDefaultValue: false,
              id: "public._prisma_migrations.logs",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "logs",
              sequence: false,
              type: "text",
            },
            {
              columnName: "migration_name",
              hasDefaultValue: false,
              id: "public._prisma_migrations.migration_name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "migration_name",
              sequence: false,
              type: "varchar",
            },
            {
              columnName: "rolled_back_at",
              hasDefaultValue: false,
              id: "public._prisma_migrations.rolled_back_at",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "rolled_back_at",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "started_at",
              hasDefaultValue: true,
              id: "public._prisma_migrations.started_at",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "started_at",
              sequence: false,
              type: "timestamptz",
            },
          ],
          id: "public._prisma_migrations",
          schemaName: "public",
          tableName: "_prisma_migrations",
          uniqueConstraints: [],
        },
        archive: {
          fields: [
            {
              columnName: "archivedon",
              hasDefaultValue: true,
              id: "pgboss.archive.archivedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "archivedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "completedon",
              hasDefaultValue: false,
              id: "pgboss.archive.completedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "completedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "createdon",
              hasDefaultValue: false,
              id: "pgboss.archive.createdon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "pgboss.archive.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "expirein",
              hasDefaultValue: false,
              id: "pgboss.archive.expirein",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "expirein",
              sequence: false,
              type: "interval",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "pgboss.archive.id",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "keepuntil",
              hasDefaultValue: false,
              id: "pgboss.archive.keepuntil",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "keepuntil",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "pgboss.archive.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "on_complete",
              hasDefaultValue: false,
              id: "pgboss.archive.on_complete",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "on_complete",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "output",
              hasDefaultValue: false,
              id: "pgboss.archive.output",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "output",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "priority",
              hasDefaultValue: false,
              id: "pgboss.archive.priority",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "priority",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrybackoff",
              hasDefaultValue: false,
              id: "pgboss.archive.retrybackoff",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrybackoff",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "retrycount",
              hasDefaultValue: false,
              id: "pgboss.archive.retrycount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrycount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrydelay",
              hasDefaultValue: false,
              id: "pgboss.archive.retrydelay",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrydelay",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrylimit",
              hasDefaultValue: false,
              id: "pgboss.archive.retrylimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrylimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "singletonkey",
              hasDefaultValue: false,
              id: "pgboss.archive.singletonkey",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "singletonkey",
              sequence: false,
              type: "text",
            },
            {
              columnName: "singletonon",
              hasDefaultValue: false,
              id: "pgboss.archive.singletonon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "singletonon",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "startafter",
              hasDefaultValue: false,
              id: "pgboss.archive.startafter",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startafter",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "startedon",
              hasDefaultValue: false,
              id: "pgboss.archive.startedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "startedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "state",
              hasDefaultValue: false,
              id: "pgboss.archive.state",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "state",
              sequence: false,
              type: "job_state",
            },
          ],
          id: "pgboss.archive",
          schemaName: "pgboss",
          tableName: "archive",
          uniqueConstraints: [],
        },
        job: {
          fields: [
            {
              columnName: "completedon",
              hasDefaultValue: false,
              id: "pgboss.job.completedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "completedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "createdon",
              hasDefaultValue: true,
              id: "pgboss.job.createdon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "pgboss.job.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "expirein",
              hasDefaultValue: true,
              id: "pgboss.job.expirein",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "expirein",
              sequence: false,
              type: "interval",
            },
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "pgboss.job.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "keepuntil",
              hasDefaultValue: true,
              id: "pgboss.job.keepuntil",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "keepuntil",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "pgboss.job.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "on_complete",
              hasDefaultValue: true,
              id: "pgboss.job.on_complete",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "on_complete",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "output",
              hasDefaultValue: false,
              id: "pgboss.job.output",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "output",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "priority",
              hasDefaultValue: true,
              id: "pgboss.job.priority",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "priority",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrybackoff",
              hasDefaultValue: true,
              id: "pgboss.job.retrybackoff",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrybackoff",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "retrycount",
              hasDefaultValue: true,
              id: "pgboss.job.retrycount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrycount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrydelay",
              hasDefaultValue: true,
              id: "pgboss.job.retrydelay",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrydelay",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrylimit",
              hasDefaultValue: true,
              id: "pgboss.job.retrylimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrylimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "singletonkey",
              hasDefaultValue: false,
              id: "pgboss.job.singletonkey",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "singletonkey",
              sequence: false,
              type: "text",
            },
            {
              columnName: "singletonon",
              hasDefaultValue: false,
              id: "pgboss.job.singletonon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "singletonon",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "startafter",
              hasDefaultValue: true,
              id: "pgboss.job.startafter",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startafter",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "startedon",
              hasDefaultValue: false,
              id: "pgboss.job.startedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "startedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "state",
              hasDefaultValue: true,
              id: "pgboss.job.state",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "state",
              sequence: false,
              type: "job_state",
            },
          ],
          id: "pgboss.job",
          schemaName: "pgboss",
          tableName: "job",
          uniqueConstraints: [],
        },
        schedule: {
          fields: [
            {
              columnName: "created_on",
              hasDefaultValue: true,
              id: "pgboss.schedule.created_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "created_on",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "cron",
              hasDefaultValue: false,
              id: "pgboss.schedule.cron",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "cron",
              sequence: false,
              type: "text",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "pgboss.schedule.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "pgboss.schedule.name",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "options",
              hasDefaultValue: false,
              id: "pgboss.schedule.options",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "options",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "timezone",
              hasDefaultValue: false,
              id: "pgboss.schedule.timezone",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timezone",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updated_on",
              hasDefaultValue: true,
              id: "pgboss.schedule.updated_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updated_on",
              sequence: false,
              type: "timestamptz",
            },
          ],
          id: "pgboss.schedule",
          schemaName: "pgboss",
          tableName: "schedule",
          uniqueConstraints: [],
        },
        version: {
          fields: [
            {
              columnName: "cron_on",
              hasDefaultValue: false,
              id: "pgboss.version.cron_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "cron_on",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "maintained_on",
              hasDefaultValue: false,
              id: "pgboss.version.maintained_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "maintained_on",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "version",
              hasDefaultValue: false,
              id: "pgboss.version.version",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "version",
              sequence: false,
              type: "int4",
            },
          ],
          id: "pgboss.version",
          schemaName: "pgboss",
          tableName: "version",
          uniqueConstraints: [],
        },
      },
    });
  });

  test("it correctly convert an introspected structure with two tables named the same in different schemas into a data model", () => {
    // arrange
    // act
    const dataModel = introspectionToDataModel(
      sameTableNamesDifferentSchemasIntrospection,
    );
    // assert
    expect(dataModel).toEqual({
      enums: {},
      models: {
        Comment: {
          fields: [
            {
              columnName: "content",
              hasDefaultValue: false,
              id: "public.Comment.content",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "content",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Comment.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "postId",
              hasDefaultValue: false,
              id: "public.Comment.postId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "postId",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.Comment.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "writtenAt",
              hasDefaultValue: false,
              id: "public.Comment.writtenAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "writtenAt",
              sequence: false,
              type: "timestamptz",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Post",
              relationFromFields: ["postId"],
              relationName: "CommentToPost",
              relationToFields: ["id"],
              sequence: false,
              type: "Post",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "public_User",
              relationFromFields: ["userId"],
              relationName: "CommentTopublic_User",
              relationToFields: ["id"],
              sequence: false,
              type: "public_User",
            },
          ],
          id: "public.Comment",
          schemaName: "public",
          tableName: "Comment",
          uniqueConstraints: [],
        },
        Post: {
          fields: [
            {
              columnName: "content",
              hasDefaultValue: false,
              id: "public.Post.content",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "content",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdBy",
              hasDefaultValue: false,
              id: "public.Post.createdBy",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdBy",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Post.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "title",
              hasDefaultValue: false,
              id: "public.Post.title",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "title",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "public_User",
              relationFromFields: ["createdBy"],
              relationName: "PostTopublic_User",
              relationToFields: ["id"],
              sequence: false,
              type: "public_User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Comment",
              relationFromFields: [],
              relationName: "CommentToPost",
              relationToFields: [],
              sequence: false,
              type: "Comment",
            },
          ],
          id: "public.Post",
          schemaName: "public",
          tableName: "Post",
          uniqueConstraints: [],
        },
        auth_User: {
          fields: [
            {
              columnName: "fullName",
              hasDefaultValue: false,
              id: "auth.User.fullName",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "fullName",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "auth.User.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
          ],
          id: "auth.User",
          schemaName: "auth",
          tableName: "User",
          uniqueConstraints: [],
        },
        public_User: {
          fields: [
            {
              columnName: "email",
              hasDefaultValue: false,
              id: "public.User.email",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "email",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.User.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.User.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Comment",
              relationFromFields: [],
              relationName: "CommentTopublic_User",
              relationToFields: [],
              sequence: false,
              type: "Comment",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Post",
              relationFromFields: [],
              relationName: "PostTopublic_User",
              relationToFields: [],
              sequence: false,
              type: "Post",
            },
          ],
          id: "public.User",
          schemaName: "public",
          tableName: "User",
          uniqueConstraints: [],
        },
      },
    });
  });

  test("it correctly convert an introspected structure with two enums named the same in different schemas into a data model", () => {
    // arrange
    const introspection = {
      enums: [
        {
          id: "public.Status",
          schema: "public",
          name: "Status",
          values: ["START", "DONE"],
        },
        {
          id: "public.AccessTokenType",
          schema: "public",
          name: "AccessTokenType",
          values: ["CLI", "WORKER"],
        },
        {
          id: "auth.AccessTokenType",
          schema: "auth",
          name: "AccessTokenType",
          values: ["CLI", "WORKER"],
        },
      ],
      tables: [
        {
          id: "public.AccessToken",
          name: "AccessToken",
          schema: "public",
          rows: 209,
          bytes: 73728,
          partitioned: false,
          columns: [
            {
              id: "public.AccessToken.type",
              name: "type",
              type: "AccessTokenType",
              typeId: "public.AccessTokenType",
              table: "AccessToken",
              schema: "public",
              nullable: false,
              default: "'CLI'::\"AccessTokenType\"",
              generated: "NEVER",
              identity: null,
              maxLength: null,
              typeCategory: "E",
              constraints: [],
            },
            {
              id: "public.AccessToken.type2",
              name: "type",
              type: "AccessTokenType",
              typeId: "auth.AccessTokenType",
              table: "AccessToken",
              schema: "public",
              nullable: false,
              default: "'CLI'::\"AccessTokenType\"",
              generated: "NEVER",
              identity: null,
              maxLength: null,
              typeCategory: "E",
              constraints: [],
            },
            {
              id: "public.AccessToken.type3",
              name: "type",
              type: "AccessTokenType[][][]",
              typeId: "auth.AccessTokenType",
              table: "AccessToken",
              schema: "public",
              nullable: false,
              default: "'CLI'::\"AccessTokenType\"",
              generated: "NEVER",
              identity: null,
              maxLength: null,
              typeCategory: "E",
              constraints: [],
            },
          ],
          parents: [],
          children: [],
          primaryKeys: {
            tableId: "public.AccessToken",
            schema: "public",
            table: "AccessToken",
            dirty: false,
            keys: [],
          },
        },
      ],
    } satisfies IntrospectedStructure;
    // act
    const dataModel = introspectionToDataModel(introspection);
    // assert
    expect(dataModel).toEqual({
      enums: {
        Status: {
          schemaName: "public",
          values: [
            {
              name: "START",
            },
            {
              name: "DONE",
            },
          ],
        },
        auth_AccessTokenType: {
          schemaName: "auth",
          values: [
            {
              name: "CLI",
            },
            {
              name: "WORKER",
            },
          ],
        },
        public_AccessTokenType: {
          schemaName: "public",
          values: [
            {
              name: "CLI",
            },
            {
              name: "WORKER",
            },
          ],
        },
      },
      models: {
        AccessToken: {
          fields: [
            {
              columnName: "type",
              hasDefaultValue: true,
              id: "public.AccessToken.type",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "type",
              sequence: false,
              type: "public_AccessTokenType",
            },
            {
              columnName: "type",
              hasDefaultValue: true,
              id: "public.AccessToken.type2",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "type",
              sequence: false,
              type: "auth_AccessTokenType",
            },
            {
              columnName: "type",
              hasDefaultValue: true,
              id: "public.AccessToken.type3",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "type",
              sequence: false,
              type: "auth_AccessTokenType[][][]",
            },
          ],
          id: "public.AccessToken",
          schemaName: "public",
          tableName: "AccessToken",
          uniqueConstraints: [],
        },
      },
    });
  });

  test("it correctly extract the sequences informations from identity definitions", () => {
    const introspection = {
      enums: [],
      sequences: {
        public: [
          {
            current: 1,
            interval: 1,
            name: "coach_coach_number_seq",
            schema: "public",
          },
        ],
      },
      tables: [
        {
          bytes: 0,
          children: [],
          columns: [
            {
              constraints: ["p"],
              default: null,
              generated: "NEVER",
              id: "public.coach.id",
              identity: null,
              maxLength: null,
              name: "id",
              nullable: false,
              schema: "public",
              table: "coach",
              type: "uuid",
              typeCategory: "U",
              typeId: "pg_catalog.uuid",
            },
            {
              constraints: [],
              default: null,
              generated: "NEVER",
              id: "public.coach.coach_number",
              identity: {
                sequenceName: undefined,
                generated: "ALWAYS",
                increment: 1,
                current: 1,
              },
              maxLength: null,
              name: "coach_number",
              nullable: false,
              schema: "public",
              table: "coach",
              type: "int8",
              typeCategory: "N",
              typeId: "pg_catalog.int8",
            },
          ],
          id: "public.coach",
          name: "coach",
          parents: [],
          partitioned: false,
          primaryKeys: {
            dirty: false,
            keys: [
              {
                name: "id",
                type: "uuid",
              },
            ],
            schema: "public",
            table: "coach",
            tableId: "public.coach",
          },
          rows: null,
          schema: "public",
        },
      ],
    } satisfies IntrospectedStructure;
    const dataModel = introspectionToDataModel(introspection);
    expect(dataModel).toEqual({
      enums: {},
      models: {
        coach: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.coach.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "coach_number",
              hasDefaultValue: false,
              id: "public.coach.coach_number",
              isGenerated: true,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "coach_number",
              sequence: {
                current: 1,
                identifier: null,
                increment: 1,
              },
              type: "int8",
            },
          ],
          id: "public.coach",
          schemaName: "public",
          tableName: "coach",
          uniqueConstraints: [],
        },
      },
    });
  });

  test("it correctly extract the sequences informations from default definitions", () => {
    const introspection = {
      enums: [
        {
          id: "test.Enum1",
          name: "Enum1",
          schema: "test",
          values: ["A", "B"],
        },
      ],
      sequences: {
        test: [
          {
            current: 1,
            interval: 1,
            name: "Table1_id_seq",
            schema: "test",
          },
          {
            current: 1,
            interval: 1,
            name: "Table2_id_seq",
            schema: "test",
          },
        ],
      },
      tables: [
        {
          bytes: 0,
          children: [
            {
              fkTable: "test.Table2",
              id: "Table2_table1_id_fkey",
              keys: [
                {
                  fkColumn: "table1_id",
                  fkType: "int4",
                  nullable: true,
                  targetColumn: "id",
                  targetType: "int4",
                },
              ],
              targetTable: "test.Table1",
            },
          ],
          columns: [
            {
              constraints: ["p"],
              default: "nextval('test.\"Table1_id_seq\"'::regclass)",
              generated: "NEVER",
              id: "test.Table1.id",
              identity: null,
              maxLength: null,
              name: "id",
              nullable: false,
              schema: "test",
              table: "Table1",
              type: "int4",
              typeCategory: "N",
              typeId: "pg_catalog.int4",
            },
            {
              constraints: [],
              default: null,
              generated: "NEVER",
              id: "test.Table1.name",
              identity: null,
              maxLength: null,
              name: "name",
              nullable: true,
              schema: "test",
              table: "Table1",
              type: "text",
              typeCategory: "S",
              typeId: "pg_catalog.text",
            },
          ],
          id: "test.Table1",
          name: "Table1",
          parents: [],
          partitioned: false,
          primaryKeys: {
            dirty: false,
            keys: [
              {
                name: "id",
                type: "int4",
              },
            ],
            schema: "test",
            table: "Table1",
            tableId: "test.Table1",
          },
          rows: 0,
          schema: "test",
        },
        {
          bytes: 0,
          children: [],
          columns: [
            {
              constraints: ["p"],
              default: "nextval('test.\"Table2_id_seq\"'::regclass)",
              generated: "NEVER",
              id: "test.Table2.id",
              identity: null,
              maxLength: null,
              name: "id",
              nullable: false,
              schema: "test",
              table: "Table2",
              type: "int4",
              typeCategory: "N",
              typeId: "pg_catalog.int4",
            },
            {
              constraints: [],
              default: null,
              generated: "NEVER",
              id: "test.Table2.name",
              identity: null,
              maxLength: null,
              name: "name",
              nullable: true,
              schema: "test",
              table: "Table2",
              type: "text",
              typeCategory: "S",
              typeId: "pg_catalog.text",
            },
            {
              constraints: ["f"],
              default: null,
              generated: "NEVER",
              id: "test.Table2.table1_id",
              identity: null,
              maxLength: null,
              name: "table1_id",
              nullable: true,
              schema: "test",
              table: "Table2",
              type: "int4",
              typeCategory: "N",
              typeId: "pg_catalog.int4",
            },
          ],
          id: "test.Table2",
          name: "Table2",
          parents: [
            {
              fkTable: "test.Table2",
              id: "Table2_table1_id_fkey",
              keys: [
                {
                  fkColumn: "table1_id",
                  fkType: "int4",
                  nullable: true,
                  targetColumn: "id",
                  targetType: "int4",
                },
              ],
              targetTable: "test.Table1",
            },
          ],
          partitioned: false,
          primaryKeys: {
            dirty: false,
            keys: [
              {
                name: "id",
                type: "int4",
              },
            ],
            schema: "test",
            table: "Table2",
            tableId: "test.Table2",
          },
          rows: 0,
          schema: "test",
        },
      ],
    } satisfies IntrospectedStructure;
    const dataModel = introspectionToDataModel(introspection);
    expect(dataModel).toEqual({
      enums: {
        Enum1: {
          schemaName: "test",
          values: [
            {
              name: "A",
            },
            {
              name: "B",
            },
          ],
        },
      },
      models: {
        Table1: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "test.Table1.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: {
                current: 1,
                identifier: '"test"."Table1_id_seq"',
                increment: 1,
              },
              type: "int4",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "test.Table1.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Table2",
              relationFromFields: [],
              relationName: "Table2ToTable1",
              relationToFields: [],
              sequence: false,
              type: "Table2",
            },
          ],
          id: "test.Table1",
          schemaName: "test",
          tableName: "Table1",
          uniqueConstraints: [],
        },
        Table2: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "test.Table2.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: {
                current: 1,
                identifier: '"test"."Table2_id_seq"',
                increment: 1,
              },
              type: "int4",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "test.Table2.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "table1_id",
              hasDefaultValue: false,
              id: "test.Table2.table1_id",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "table1_id",
              sequence: false,
              type: "int4",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Table1",
              relationFromFields: ["table1_id"],
              relationName: "Table2ToTable1",
              relationToFields: ["id"],
              sequence: false,
              type: "Table1",
            },
          ],
          id: "test.Table2",
          schemaName: "test",
          tableName: "Table2",
          uniqueConstraints: [],
        },
      },
    });
  });

  test("it correctly convert an introspected structure into a data model with unique constraints", () => {
    const dataModel = introspectionToDataModel(introspectionWithConstraints);

    // assert
    expect(dataModel).toEqual({
      enums: {
        AccessTokenType: {
          schemaName: "public",
          values: [
            {
              name: "CLI",
            },
            {
              name: "WORKER",
            },
          ],
        },
        AuditLogActions: {
          schemaName: "public",
          values: [
            {
              name: "EMAIL_SENT_INCOMPLETE_ONBOARDING",
            },
            {
              name: "EMAIL_SENT_ORGANIZATION_CHURN",
            },
            {
              name: "ORGANIZATION_DELETED",
            },
            {
              name: "PII_UPDATED_PREDICTIONS_OVERRIDE",
            },
            {
              name: "PREVIEW_DATABASE_CREATED",
            },
            {
              name: "PREVIEW_DATABASE_DEPLOYED",
            },
            {
              name: "PREVIEW_DATABASE_DESTROYED",
            },
            {
              name: "PREVIEW_DATABASE_DROPPED",
            },
            {
              name: "PREVIEW_DATABASE_RESET",
            },
            {
              name: "PROJECT_DELETED",
            },
            {
              name: "SNAPSHOT_CONFIG_UPDATED",
            },
            {
              name: "SNAPSHOT_CREATED",
            },
            {
              name: "SNAPSHOT_DELETED",
            },
            {
              name: "SNAPSHOT_RESTORED_FAILURE",
            },
            {
              name: "SNAPSHOT_RESTORED_SUCCESS",
            },
          ],
        },
        DatabaseStatus: {
          schemaName: "public",
          values: [
            {
              name: "DELETED",
            },
            {
              name: "DISABLED",
            },
            {
              name: "ENABLED",
            },
          ],
        },
        MemberRole: {
          schemaName: "public",
          values: [
            {
              name: "ADMIN",
            },
            {
              name: "MEMBER",
            },
            {
              name: "OWNER",
            },
          ],
        },
        PredictionsEngine: {
          schemaName: "public",
          values: [
            {
              name: "FINETUNED_BERT",
            },
          ],
        },
        PreviewDatabaseStatus: {
          schemaName: "public",
          values: [
            {
              name: "FAILURE",
            },
            {
              name: "IN_PROGRESS",
            },
            {
              name: "SUCCESS",
            },
          ],
        },
        ReleaseChannel: {
          schemaName: "public",
          values: [
            {
              name: "BETA",
            },
            {
              name: "PRIVATE",
            },
            {
              name: "PUBLIC",
            },
          ],
        },
        SnapshotStatus: {
          schemaName: "public",
          values: [
            {
              name: "BOOTING",
            },
            {
              name: "DELETED",
            },
            {
              name: "FAILURE",
            },
            {
              name: "IN_PROGRESS",
            },
            {
              name: "PENDING",
            },
            {
              name: "PURGED",
            },
            {
              name: "STARTED",
            },
            {
              name: "STARTING",
            },
            {
              name: "SUCCESS",
            },
            {
              name: "TIMEOUT",
            },
          ],
        },
        UserNotifications: {
          schemaName: "public",
          values: [
            {
              name: "EMAIL",
            },
            {
              name: "NONE",
            },
          ],
        },
        UserRole: {
          schemaName: "public",
          values: [
            {
              name: "ADMIN",
            },
            {
              name: "SUPERUSER",
            },
            {
              name: "USER",
            },
          ],
        },
        job_state: {
          schemaName: "pgboss",
          values: [
            {
              name: "active",
            },
            {
              name: "cancelled",
            },
            {
              name: "completed",
            },
            {
              name: "created",
            },
            {
              name: "expired",
            },
            {
              name: "failed",
            },
            {
              name: "retry",
            },
          ],
        },
      },
      models: {
        AccessToken: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.AccessToken.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.AccessToken.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.AccessToken.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.AccessToken.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "userAgent",
              hasDefaultValue: false,
              id: "public.AccessToken.userAgent",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "userAgent",
              sequence: false,
              type: "text",
            },
            {
              columnName: "type",
              hasDefaultValue: true,
              id: "public.AccessToken.type",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "type",
              sequence: false,
              type: "AccessTokenType",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.AccessToken.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "hash",
              hasDefaultValue: false,
              id: "public.AccessToken.hash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "hash",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "AccessTokenToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ExecTask",
              relationFromFields: [],
              relationName: "ExecTaskToAccessToken",
              relationToFields: [],
              sequence: false,
              type: "ExecTask",
            },
          ],
          id: "public.AccessToken",
          schemaName: "public",
          tableName: "AccessToken",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "AccessToken_pkey",
              schema: "public",
              table: "AccessToken",
              tableId: "public.AccessToken",
            },
          ],
        },
        AuditLog: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.AuditLog.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.AuditLog.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "action",
              hasDefaultValue: false,
              id: "public.AuditLog.action",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "action",
              sequence: false,
              type: "AuditLogActions",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "public.AuditLog.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.AuditLog.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.AuditLog.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.AuditLog.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "AuditLogToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "AuditLogToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "AuditLogToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
          ],
          id: "public.AuditLog",
          schemaName: "public",
          tableName: "AuditLog",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "AuditLog_pkey",
              schema: "public",
              table: "AuditLog",
              tableId: "public.AuditLog",
            },
          ],
        },
        AwsConsumptionHistory: {
          fields: [
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.name",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "startPeriod",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.startPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "endPeriod",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.endPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "endPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "awsStorageBytes",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.awsStorageBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "awsStorageBytes",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "awsComputeTimeSeconds",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.awsComputeTimeSeconds",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "awsComputeTimeSeconds",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "awsDataTransferBytes",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.awsDataTransferBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "awsDataTransferBytes",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.AwsConsumptionHistory.organizationId",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "AwsConsumptionHistoryToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "AwsConsumptionHistoryToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "AwsConsumptionHistoryToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.AwsConsumptionHistory",
          schemaName: "public",
          tableName: "AwsConsumptionHistory",
          uniqueConstraints: [
            {
              columns: ["endPeriod", "name", "organizationId", "startPeriod"],
              dirty: false,
              name: "AwsConsumptionHistory_pkey",
              schema: "public",
              table: "AwsConsumptionHistory",
              tableId: "public.AwsConsumptionHistory",
            },
          ],
        },
        DatabaseProvider: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "public.DatabaseProvider.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: {
                current: 3,
                identifier: '"public"."DatabaseProvider_id_seq"',
                increment: 1,
              },
              type: "int4",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.DatabaseProvider.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "domain",
              hasDefaultValue: false,
              id: "public.DatabaseProvider.domain",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "domain",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "DbConnection",
              relationFromFields: [],
              relationName: "DbConnectionToDatabaseProvider",
              relationToFields: [],
              sequence: false,
              type: "DbConnection",
            },
          ],
          id: "public.DatabaseProvider",
          schemaName: "public",
          tableName: "DatabaseProvider",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "DatabaseProvider_pkey",
              schema: "public",
              table: "DatabaseProvider",
              tableId: "public.DatabaseProvider",
            },
          ],
        },
        DbConnection: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.DbConnection.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.DbConnection.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "ssl",
              hasDefaultValue: true,
              id: "public.DbConnection.ssl",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "ssl",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "connectionUrlHash",
              hasDefaultValue: false,
              id: "public.DbConnection.connectionUrlHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "connectionUrlHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.DbConnection.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "databaseProviderId",
              hasDefaultValue: false,
              id: "public.DbConnection.databaseProviderId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "databaseProviderId",
              sequence: false,
              type: "int4",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DatabaseProvider",
              relationFromFields: ["databaseProviderId"],
              relationName: "DbConnectionToDatabaseProvider",
              relationToFields: ["id"],
              sequence: false,
              type: "DatabaseProvider",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "DbConnectionToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project_Project_dbConnectionIdToDbConnection",
              relationFromFields: [],
              relationName: "Project_dbConnectionIdToDbConnection",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project_Project_hostedDbUrlIdToDbConnection",
              relationFromFields: [],
              relationName: "Project_hostedDbUrlIdToDbConnection",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToDbConnection",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.DbConnection",
          schemaName: "public",
          tableName: "DbConnection",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "DbConnection_pkey",
              schema: "public",
              table: "DbConnection",
              tableId: "public.DbConnection",
            },
          ],
        },
        ExecTask: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.ExecTask.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "command",
              hasDefaultValue: false,
              id: "public.ExecTask.command",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "command",
              sequence: false,
              type: "text",
            },
            {
              columnName: "env",
              hasDefaultValue: false,
              id: "public.ExecTask.env",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "env",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "exitCode",
              hasDefaultValue: false,
              id: "public.ExecTask.exitCode",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "exitCode",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.ExecTask.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: true,
              id: "public.ExecTask.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.ExecTask.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "needsSourceDatabaseUrl",
              hasDefaultValue: true,
              id: "public.ExecTask.needsSourceDatabaseUrl",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "needsSourceDatabaseUrl",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "progress",
              hasDefaultValue: false,
              id: "public.ExecTask.progress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "progress",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "endedAt",
              hasDefaultValue: false,
              id: "public.ExecTask.endedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "endedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "arn",
              hasDefaultValue: false,
              id: "public.ExecTask.arn",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "arn",
              sequence: false,
              type: "text",
            },
            {
              columnName: "accessTokenId",
              hasDefaultValue: false,
              id: "public.ExecTask.accessTokenId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "accessTokenId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "lastNotifiedAt",
              hasDefaultValue: false,
              id: "public.ExecTask.lastNotifiedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "lastNotifiedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "AccessToken",
              relationFromFields: ["accessTokenId"],
              relationName: "ExecTaskToAccessToken",
              relationToFields: ["id"],
              sequence: false,
              type: "AccessToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "ExecTaskToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToExecTask",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.ExecTask",
          schemaName: "public",
          tableName: "ExecTask",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "ExecTask_pkey",
              schema: "public",
              table: "ExecTask",
              tableId: "public.ExecTask",
            },
          ],
        },
        InviteToken: {
          fields: [
            {
              columnName: "token",
              hasDefaultValue: false,
              id: "public.InviteToken.token",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "token",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.InviteToken.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.InviteToken.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "createdByUserId",
              hasDefaultValue: false,
              id: "public.InviteToken.createdByUserId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdByUserId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "usedByMemberId",
              hasDefaultValue: false,
              id: "public.InviteToken.usedByMemberId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "usedByMemberId",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.InviteToken.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "expiresAt",
              hasDefaultValue: false,
              id: "public.InviteToken.expiresAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "expiresAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Member",
              relationFromFields: ["usedByMemberId"],
              relationName: "InviteTokenToMember",
              relationToFields: ["id"],
              sequence: false,
              type: "Member",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "InviteTokenToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "User",
              relationFromFields: ["createdByUserId"],
              relationName: "InviteTokenToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
          ],
          id: "public.InviteToken",
          schemaName: "public",
          tableName: "InviteToken",
          uniqueConstraints: [
            {
              columns: ["token"],
              dirty: false,
              name: "InviteToken_pkey",
              schema: "public",
              table: "InviteToken",
              tableId: "public.InviteToken",
            },
          ],
        },
        Member: {
          fields: [
            {
              columnName: "role",
              hasDefaultValue: true,
              id: "public.Member.role",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "role",
              sequence: false,
              type: "MemberRole",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Member.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.Member.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "public.Member.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: {
                current: 3290,
                identifier: '"public"."Member_id_seq"',
                increment: 1,
              },
              type: "int4",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Member.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Member.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "MemberToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "MemberToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "InviteToken",
              relationFromFields: [],
              relationName: "InviteTokenToMember",
              relationToFields: [],
              sequence: false,
              type: "InviteToken",
            },
          ],
          id: "public.Member",
          schemaName: "public",
          tableName: "Member",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "Member_pkey",
              schema: "public",
              table: "Member",
              tableId: "public.Member",
            },
          ],
        },
        NeonConsumptionHistory: {
          fields: [
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.name",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "startPeriod",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.startPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "endPeriod",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.endPeriod",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "endPeriod",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "neonDataStorageBytesHour",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonDataStorageBytesHour",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonDataStorageBytesHour",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "neonSyntheticStorageSize",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonSyntheticStorageSize",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonSyntheticStorageSize",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "neonDataTransferBytes",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonDataTransferBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonDataTransferBytes",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "neonWrittenDataBytes",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonWrittenDataBytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonWrittenDataBytes",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "neonComputeTimeSeconds",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonComputeTimeSeconds",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonComputeTimeSeconds",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "neonActiveTimeSeconds",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.neonActiveTimeSeconds",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonActiveTimeSeconds",
              sequence: false,
              type: "int8",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.NeonConsumptionHistory.organizationId",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "NeonConsumptionHistoryToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "NeonConsumptionHistoryToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "NeonConsumptionHistoryToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.NeonConsumptionHistory",
          schemaName: "public",
          tableName: "NeonConsumptionHistory",
          uniqueConstraints: [
            {
              columns: ["endPeriod", "name", "organizationId", "startPeriod"],
              dirty: false,
              name: "NeonConsumptionHistory_pkey",
              schema: "public",
              table: "NeonConsumptionHistory",
              tableId: "public.NeonConsumptionHistory",
            },
          ],
        },
        NeonProject: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.NeonProject.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.NeonProject.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.NeonProject.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "neonProjectId",
              hasDefaultValue: false,
              id: "public.NeonProject.neonProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "neonProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.NeonProject.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "connectionUrlHash",
              hasDefaultValue: false,
              id: "public.NeonProject.connectionUrlHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "connectionUrlHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.NeonProject.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "status",
              hasDefaultValue: true,
              id: "public.NeonProject.status",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "status",
              sequence: false,
              type: "PreviewDatabaseStatus",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "NeonProjectToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "NeonProjectToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "PreviewDatabase",
              relationFromFields: [],
              relationName: "PreviewDatabaseToNeonProject",
              relationToFields: [],
              sequence: false,
              type: "PreviewDatabase",
            },
          ],
          id: "public.NeonProject",
          schemaName: "public",
          tableName: "NeonProject",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "NeonProject_pkey",
              schema: "public",
              table: "NeonProject",
              tableId: "public.NeonProject",
            },
          ],
        },
        Organization: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Organization.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.Organization.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "pricingPlanId",
              hasDefaultValue: false,
              id: "public.Organization.pricingPlanId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "pricingPlanId",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "subscriptionData",
              hasDefaultValue: false,
              id: "public.Organization.subscriptionData",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "subscriptionData",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Organization.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Organization.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "deleted",
              hasDefaultValue: true,
              id: "public.Organization.deleted",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "deleted",
              sequence: false,
              type: "bool",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "PricingPlan",
              relationFromFields: ["pricingPlanId"],
              relationName: "OrganizationToPricingPlan",
              relationToFields: ["id"],
              sequence: false,
              type: "PricingPlan",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AuditLog",
              relationFromFields: [],
              relationName: "AuditLogToOrganization",
              relationToFields: [],
              sequence: false,
              type: "AuditLog",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AwsConsumptionHistory",
              relationFromFields: [],
              relationName: "AwsConsumptionHistoryToOrganization",
              relationToFields: [],
              sequence: false,
              type: "AwsConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "DbConnection",
              relationFromFields: [],
              relationName: "DbConnectionToOrganization",
              relationToFields: [],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "InviteToken",
              relationFromFields: [],
              relationName: "InviteTokenToOrganization",
              relationToFields: [],
              sequence: false,
              type: "InviteToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Member",
              relationFromFields: [],
              relationName: "MemberToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Member",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonConsumptionHistory",
              relationFromFields: [],
              relationName: "NeonConsumptionHistoryToOrganization",
              relationToFields: [],
              sequence: false,
              type: "NeonConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: [],
              relationName: "ProjectToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Table",
              relationFromFields: [],
              relationName: "TableToOrganization",
              relationToFields: [],
              sequence: false,
              type: "Table",
            },
          ],
          id: "public.Organization",
          schemaName: "public",
          tableName: "Organization",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "Organization_pkey",
              schema: "public",
              table: "Organization",
              tableId: "public.Organization",
            },
          ],
        },
        PredictionDataSet: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.PredictionDataSet.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "input",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.input",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "input",
              sequence: false,
              type: "text",
            },
            {
              columnName: "context",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.context",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "context",
              sequence: false,
              type: "text",
            },
            {
              columnName: "shape",
              hasDefaultValue: false,
              id: "public.PredictionDataSet.shape",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "shape",
              sequence: false,
              type: "text",
            },
            {
              columnName: "contextSkipTraining",
              hasDefaultValue: true,
              id: "public.PredictionDataSet.contextSkipTraining",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "contextSkipTraining",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "shapeSkipTraining",
              hasDefaultValue: true,
              id: "public.PredictionDataSet.shapeSkipTraining",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "shapeSkipTraining",
              sequence: false,
              type: "bool",
            },
          ],
          id: "public.PredictionDataSet",
          schemaName: "public",
          tableName: "PredictionDataSet",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "PredictionDataSet_pkey",
              schema: "public",
              table: "PredictionDataSet",
              tableId: "public.PredictionDataSet",
            },
          ],
        },
        PredictionJob: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.PredictionJob.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "engine",
              hasDefaultValue: true,
              id: "public.PredictionJob.engine",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "engine",
              sequence: false,
              type: "PredictionsEngine",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.PredictionJob.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.PredictionJob.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "endedAt",
              hasDefaultValue: false,
              id: "public.PredictionJob.endedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "endedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "rawInput",
              hasDefaultValue: false,
              id: "public.PredictionJob.rawInput",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "rawInput",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "engineInput",
              hasDefaultValue: false,
              id: "public.PredictionJob.engineInput",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "engineInput",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "progress",
              hasDefaultValue: false,
              id: "public.PredictionJob.progress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "progress",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "engineOptions",
              hasDefaultValue: false,
              id: "public.PredictionJob.engineOptions",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "engineOptions",
              sequence: false,
              type: "jsonb",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: [],
              relationName: "ProjectToPredictionJob",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
          ],
          id: "public.PredictionJob",
          schemaName: "public",
          tableName: "PredictionJob",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "PredictionJob_pkey",
              schema: "public",
              table: "PredictionJob",
              tableId: "public.PredictionJob",
            },
          ],
        },
        PreviewDatabase: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.PreviewDatabase.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "neonBranchId",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.neonBranchId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "neonBranchId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "neonProjectId",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.neonProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "neonProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "connectionUrlHash",
              hasDefaultValue: false,
              id: "public.PreviewDatabase.connectionUrlHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "connectionUrlHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "status",
              hasDefaultValue: true,
              id: "public.PreviewDatabase.status",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "status",
              sequence: false,
              type: "PreviewDatabaseStatus",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "NeonProject",
              relationFromFields: ["neonProjectId"],
              relationName: "PreviewDatabaseToNeonProject",
              relationToFields: ["id"],
              sequence: false,
              type: "NeonProject",
            },
          ],
          id: "public.PreviewDatabase",
          schemaName: "public",
          tableName: "PreviewDatabase",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "PreviewDatabase_pkey",
              schema: "public",
              table: "PreviewDatabase",
              tableId: "public.PreviewDatabase",
            },
          ],
        },
        PricingPlan: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "public.PricingPlan.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: {
                current: 1,
                identifier: '"public"."PricingPlan_id_seq"',
                increment: 1,
              },
              type: "int4",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.PricingPlan.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "amount",
              hasDefaultValue: false,
              id: "public.PricingPlan.amount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "amount",
              sequence: false,
              type: "text",
            },
            {
              columnName: "isDefault",
              hasDefaultValue: false,
              id: "public.PricingPlan.isDefault",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "isDefault",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "storageLimit",
              hasDefaultValue: false,
              id: "public.PricingPlan.storageLimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "storageLimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "processLimit",
              hasDefaultValue: false,
              id: "public.PricingPlan.processLimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "processLimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "restoreLimit",
              hasDefaultValue: false,
              id: "public.PricingPlan.restoreLimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "restoreLimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "productId",
              hasDefaultValue: false,
              id: "public.PricingPlan.productId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "productId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Organization",
              relationFromFields: [],
              relationName: "OrganizationToPricingPlan",
              relationToFields: [],
              sequence: false,
              type: "Organization",
            },
          ],
          id: "public.PricingPlan",
          schemaName: "public",
          tableName: "PricingPlan",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "PricingPlan_pkey",
              schema: "public",
              table: "PricingPlan",
              tableId: "public.PricingPlan",
            },
          ],
        },
        Project: {
          fields: [
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "public.Project.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Project.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "dbConnectionId",
              hasDefaultValue: false,
              id: "public.Project.dbConnectionId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbConnectionId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Project.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Project.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Project.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "dbInfo",
              hasDefaultValue: false,
              id: "public.Project.dbInfo",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbInfo",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "dbInfoLastUpdate",
              hasDefaultValue: false,
              id: "public.Project.dbInfoLastUpdate",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbInfoLastUpdate",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "deleted",
              hasDefaultValue: true,
              id: "public.Project.deleted",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "deleted",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "autoDeleteDays",
              hasDefaultValue: true,
              id: "public.Project.autoDeleteDays",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "autoDeleteDays",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "snapshotConfig",
              hasDefaultValue: false,
              id: "public.Project.snapshotConfig",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotConfig",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "schedule",
              hasDefaultValue: false,
              id: "public.Project.schedule",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "schedule",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "runTaskOptions",
              hasDefaultValue: false,
              id: "public.Project.runTaskOptions",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "runTaskOptions",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "hostedDbUrlId",
              hasDefaultValue: false,
              id: "public.Project.hostedDbUrlId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "hostedDbUrlId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "hostedDbRegion",
              hasDefaultValue: false,
              id: "public.Project.hostedDbRegion",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "hostedDbRegion",
              sequence: false,
              type: "text",
            },
            {
              columnName: "scheduleTags",
              hasDefaultValue: true,
              id: "public.Project.scheduleTags",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "scheduleTags",
              sequence: false,
              type: "text[]",
            },
            {
              columnName: "previewDatabaseRegion",
              hasDefaultValue: false,
              id: "public.Project.previewDatabaseRegion",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "previewDatabaseRegion",
              sequence: false,
              type: "text",
            },
            {
              columnName: "predictionJobId",
              hasDefaultValue: false,
              id: "public.Project.predictionJobId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "predictionJobId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "supabaseProjectId",
              hasDefaultValue: false,
              id: "public.Project.supabaseProjectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseProjectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "preseedPreviewDatabases",
              hasDefaultValue: true,
              id: "public.Project.preseedPreviewDatabases",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "preseedPreviewDatabases",
              sequence: false,
              type: "bool",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DbConnection_Project_dbConnectionIdToDbConnection",
              relationFromFields: ["dbConnectionId"],
              relationName: "Project_dbConnectionIdToDbConnection",
              relationToFields: ["id"],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DbConnection_Project_hostedDbUrlIdToDbConnection",
              relationFromFields: ["hostedDbUrlId"],
              relationName: "Project_hostedDbUrlIdToDbConnection",
              relationToFields: ["id"],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "ProjectToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "PredictionJob",
              relationFromFields: ["predictionJobId"],
              relationName: "ProjectToPredictionJob",
              relationToFields: ["id"],
              sequence: false,
              type: "PredictionJob",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "SupabaseProject",
              relationFromFields: ["supabaseProjectId"],
              relationName: "ProjectToSupabaseProject",
              relationToFields: ["id"],
              sequence: false,
              type: "SupabaseProject",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AuditLog",
              relationFromFields: [],
              relationName: "AuditLogToProject",
              relationToFields: [],
              sequence: false,
              type: "AuditLog",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AwsConsumptionHistory",
              relationFromFields: [],
              relationName: "AwsConsumptionHistoryToProject",
              relationToFields: [],
              sequence: false,
              type: "AwsConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ExecTask",
              relationFromFields: [],
              relationName: "ExecTaskToProject",
              relationToFields: [],
              sequence: false,
              type: "ExecTask",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonConsumptionHistory",
              relationFromFields: [],
              relationName: "NeonConsumptionHistoryToProject",
              relationToFields: [],
              sequence: false,
              type: "NeonConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonProject",
              relationFromFields: [],
              relationName: "NeonProjectToProject",
              relationToFields: [],
              sequence: false,
              type: "NeonProject",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ShapePredictionOverride",
              relationFromFields: [],
              relationName: "ShapePredictionOverrideToProject",
              relationToFields: [],
              sequence: false,
              type: "ShapePredictionOverride",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToProject",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.Project",
          schemaName: "public",
          tableName: "Project",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "Project_pkey",
              schema: "public",
              table: "Project",
              tableId: "public.Project",
            },
          ],
        },
        ReleaseVersion: {
          fields: [
            {
              columnName: "version",
              hasDefaultValue: false,
              id: "public.ReleaseVersion.version",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "version",
              sequence: false,
              type: "text",
            },
            {
              columnName: "channel",
              hasDefaultValue: true,
              id: "public.ReleaseVersion.channel",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "channel",
              sequence: false,
              type: "ReleaseChannel",
            },
            {
              columnName: "forceUpgrade",
              hasDefaultValue: true,
              id: "public.ReleaseVersion.forceUpgrade",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "forceUpgrade",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "releaseDate",
              hasDefaultValue: true,
              id: "public.ReleaseVersion.releaseDate",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "releaseDate",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "userId",
              hasDefaultValue: false,
              id: "public.ReleaseVersion.userId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "userId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "User",
              relationFromFields: ["userId"],
              relationName: "ReleaseVersionToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
          ],
          id: "public.ReleaseVersion",
          schemaName: "public",
          tableName: "ReleaseVersion",
          uniqueConstraints: [
            {
              columns: ["version"],
              dirty: false,
              name: "ReleaseVersion_pkey",
              schema: "public",
              table: "ReleaseVersion",
              tableId: "public.ReleaseVersion",
            },
          ],
        },
        ShapePredictionOverride: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.ShapePredictionOverride.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.ShapePredictionOverride.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.ShapePredictionOverride.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "input",
              hasDefaultValue: false,
              id: "public.ShapePredictionOverride.input",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "input",
              sequence: false,
              type: "text",
            },
            {
              columnName: "shape",
              hasDefaultValue: false,
              id: "public.ShapePredictionOverride.shape",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "shape",
              sequence: false,
              type: "text",
            },
            {
              columnName: "context",
              hasDefaultValue: false,
              id: "public.ShapePredictionOverride.context",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "context",
              sequence: false,
              type: "text",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.ShapePredictionOverride.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "ShapePredictionOverrideToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
          ],
          id: "public.ShapePredictionOverride",
          schemaName: "public",
          tableName: "ShapePredictionOverride",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "ShapePredictionOverride_pkey",
              schema: "public",
              table: "ShapePredictionOverride",
              tableId: "public.ShapePredictionOverride",
            },
          ],
        },
        ShapePredictionStore: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.ShapePredictionStore.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "input",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.input",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "input",
              sequence: false,
              type: "text",
            },
            {
              columnName: "predictedLabel",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.predictedLabel",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "predictedLabel",
              sequence: false,
              type: "text",
            },
            {
              columnName: "confidence",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.confidence",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "confidence",
              sequence: false,
              type: "float8",
            },
            {
              columnName: "overrideLabel",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.overrideLabel",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "overrideLabel",
              sequence: false,
              type: "text",
            },
            {
              columnName: "confidenceContext",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.confidenceContext",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "confidenceContext",
              sequence: false,
              type: "float8",
            },
            {
              columnName: "overrideContext",
              hasDefaultValue: false,
              id: "public.ShapePredictionStore.overrideContext",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "overrideContext",
              sequence: false,
              type: "text",
            },
            {
              columnName: "predictedContext",
              hasDefaultValue: true,
              id: "public.ShapePredictionStore.predictedContext",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "predictedContext",
              sequence: false,
              type: "text",
            },
            {
              columnName: "engine",
              hasDefaultValue: true,
              id: "public.ShapePredictionStore.engine",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "engine",
              sequence: false,
              type: "PredictionsEngine",
            },
          ],
          id: "public.ShapePredictionStore",
          schemaName: "public",
          tableName: "ShapePredictionStore",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "ShapePredictionStore_pkey",
              schema: "public",
              table: "ShapePredictionStore",
              tableId: "public.ShapePredictionStore",
            },
          ],
        },
        Snapshot: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Snapshot.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "uniqueName",
              hasDefaultValue: false,
              id: "public.Snapshot.uniqueName",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "uniqueName",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.Snapshot.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.Snapshot.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "statusOld",
              hasDefaultValue: true,
              id: "public.Snapshot.statusOld",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "statusOld",
              sequence: false,
              type: "SnapshotStatus",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Snapshot.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "dbConnectionId",
              hasDefaultValue: false,
              id: "public.Snapshot.dbConnectionId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbConnectionId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "workerIpAddress",
              hasDefaultValue: false,
              id: "public.Snapshot.workerIpAddress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "workerIpAddress",
              sequence: false,
              type: "text",
            },
            {
              columnName: "errors",
              hasDefaultValue: false,
              id: "public.Snapshot.errors",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "errors",
              sequence: false,
              type: "text[]",
            },
            {
              columnName: "failureCount",
              hasDefaultValue: true,
              id: "public.Snapshot.failureCount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "failureCount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.Snapshot.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "dbSchemaDump",
              hasDefaultValue: false,
              id: "public.Snapshot.dbSchemaDump",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbSchemaDump",
              sequence: false,
              type: "text",
            },
            {
              columnName: "logs",
              hasDefaultValue: false,
              id: "public.Snapshot.logs",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "logs",
              sequence: false,
              type: "text[]",
            },
            {
              columnName: "restoreCount",
              hasDefaultValue: true,
              id: "public.Snapshot.restoreCount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "restoreCount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "dbInfo",
              hasDefaultValue: false,
              id: "public.Snapshot.dbInfo",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "dbInfo",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "snapshotConfig",
              hasDefaultValue: false,
              id: "public.Snapshot.snapshotConfig",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "snapshotConfig",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "runtime",
              hasDefaultValue: false,
              id: "public.Snapshot.runtime",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "runtime",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "summary",
              hasDefaultValue: false,
              id: "public.Snapshot.summary",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "summary",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "createdByUserId",
              hasDefaultValue: false,
              id: "public.Snapshot.createdByUserId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "createdByUserId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "execTaskId",
              hasDefaultValue: false,
              id: "public.Snapshot.execTaskId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "execTaskId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "progress",
              hasDefaultValue: false,
              id: "public.Snapshot.progress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "progress",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "notifyOnSuccess",
              hasDefaultValue: true,
              id: "public.Snapshot.notifyOnSuccess",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "notifyOnSuccess",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "deletedAt",
              hasDefaultValue: false,
              id: "public.Snapshot.deletedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "deletedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "purgedAt",
              hasDefaultValue: false,
              id: "public.Snapshot.purgedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "purgedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "storage",
              hasDefaultValue: false,
              id: "public.Snapshot.storage",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "storage",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "isScheduled",
              hasDefaultValue: true,
              id: "public.Snapshot.isScheduled",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "isScheduled",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "preseedPreviewDatabase",
              hasDefaultValue: true,
              id: "public.Snapshot.preseedPreviewDatabase",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "preseedPreviewDatabase",
              sequence: false,
              type: "bool",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "DbConnection",
              relationFromFields: ["dbConnectionId"],
              relationName: "SnapshotToDbConnection",
              relationToFields: ["id"],
              sequence: false,
              type: "DbConnection",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "ExecTask",
              relationFromFields: ["execTaskId"],
              relationName: "SnapshotToExecTask",
              relationToFields: ["id"],
              sequence: false,
              type: "ExecTask",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "SnapshotToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Project",
              relationFromFields: ["projectId"],
              relationName: "SnapshotToProject",
              relationToFields: ["id"],
              sequence: false,
              type: "Project",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "object",
              name: "User",
              relationFromFields: ["createdByUserId"],
              relationName: "SnapshotToUser",
              relationToFields: ["id"],
              sequence: false,
              type: "User",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AwsConsumptionHistory",
              relationFromFields: [],
              relationName: "AwsConsumptionHistoryToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "AwsConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonConsumptionHistory",
              relationFromFields: [],
              relationName: "NeonConsumptionHistoryToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "NeonConsumptionHistory",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "NeonProject",
              relationFromFields: [],
              relationName: "NeonProjectToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "NeonProject",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Table",
              relationFromFields: [],
              relationName: "TableToSnapshot",
              relationToFields: [],
              sequence: false,
              type: "Table",
            },
          ],
          id: "public.Snapshot",
          schemaName: "public",
          tableName: "Snapshot",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "Snapshot_pkey",
              schema: "public",
              table: "Snapshot",
              tableId: "public.Snapshot",
            },
          ],
        },
        SupabaseProject: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.SupabaseProject.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.SupabaseProject.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: true,
              id: "public.SupabaseProject.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "projectId",
              hasDefaultValue: false,
              id: "public.SupabaseProject.projectId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "projectId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "supabaseAuthCodeHash",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseAuthCodeHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "supabaseAuthCodeHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "supabaseRefreshToken",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseRefreshToken",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseRefreshToken",
              sequence: false,
              type: "text",
            },
            {
              columnName: "supabaseAccessTokenHash",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseAccessTokenHash",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseAccessTokenHash",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "supabaseAccessTokenExpiresAt",
              hasDefaultValue: false,
              id: "public.SupabaseProject.supabaseAccessTokenExpiresAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "supabaseAccessTokenExpiresAt",
              sequence: false,
              type: "timestamp",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Project",
              relationFromFields: [],
              relationName: "ProjectToSupabaseProject",
              relationToFields: [],
              sequence: false,
              type: "Project",
            },
          ],
          id: "public.SupabaseProject",
          schemaName: "public",
          tableName: "SupabaseProject",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "SupabaseProject_pkey",
              schema: "public",
              table: "SupabaseProject",
              tableId: "public.SupabaseProject",
            },
          ],
        },
        Table: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.Table.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "tableName",
              hasDefaultValue: false,
              id: "public.Table.tableName",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "tableName",
              sequence: false,
              type: "text",
            },
            {
              columnName: "status",
              hasDefaultValue: true,
              id: "public.Table.status",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "status",
              sequence: false,
              type: "SnapshotStatus",
            },
            {
              columnName: "bucketKey",
              hasDefaultValue: false,
              id: "public.Table.bucketKey",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "bucketKey",
              sequence: false,
              type: "text",
            },
            {
              columnName: "bytes",
              hasDefaultValue: false,
              id: "public.Table.bytes",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "bytes",
              sequence: false,
              type: "text",
            },
            {
              columnName: "timeToDump",
              hasDefaultValue: false,
              id: "public.Table.timeToDump",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToDump",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "timeToSave",
              hasDefaultValue: false,
              id: "public.Table.timeToSave",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToSave",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "snapshotId",
              hasDefaultValue: false,
              id: "public.Table.snapshotId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "snapshotId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "organizationId",
              hasDefaultValue: false,
              id: "public.Table.organizationId",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "organizationId",
              sequence: false,
              type: "text",
            },
            {
              columnName: "checksum",
              hasDefaultValue: false,
              id: "public.Table.checksum",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "checksum",
              sequence: false,
              type: "text",
            },
            {
              columnName: "timeToCompress",
              hasDefaultValue: false,
              id: "public.Table.timeToCompress",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToCompress",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "timeToEncrypt",
              hasDefaultValue: false,
              id: "public.Table.timeToEncrypt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timeToEncrypt",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "rows",
              hasDefaultValue: false,
              id: "public.Table.rows",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "rows",
              sequence: false,
              type: "text",
            },
            {
              columnName: "schema",
              hasDefaultValue: false,
              id: "public.Table.schema",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "schema",
              sequence: false,
              type: "text",
            },
            {
              columnName: "totalRows",
              hasDefaultValue: false,
              id: "public.Table.totalRows",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "totalRows",
              sequence: false,
              type: "text",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Organization",
              relationFromFields: ["organizationId"],
              relationName: "TableToOrganization",
              relationToFields: ["id"],
              sequence: false,
              type: "Organization",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "object",
              name: "Snapshot",
              relationFromFields: ["snapshotId"],
              relationName: "TableToSnapshot",
              relationToFields: ["id"],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.Table",
          schemaName: "public",
          tableName: "Table",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "Table_pkey",
              schema: "public",
              table: "Table",
              tableId: "public.Table",
            },
          ],
        },
        User: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public.User.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "text",
            },
            {
              columnName: "sub",
              hasDefaultValue: false,
              id: "public.User.sub",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "sub",
              sequence: false,
              type: "text",
            },
            {
              columnName: "email",
              hasDefaultValue: false,
              id: "public.User.email",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "email",
              sequence: false,
              type: "text",
            },
            {
              columnName: "createdAt",
              hasDefaultValue: true,
              id: "public.User.createdAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "updatedAt",
              hasDefaultValue: false,
              id: "public.User.updatedAt",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updatedAt",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "role",
              hasDefaultValue: true,
              id: "public.User.role",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "role",
              sequence: false,
              type: "UserRole",
            },
            {
              columnName: "notifications",
              hasDefaultValue: true,
              id: "public.User.notifications",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "notifications",
              sequence: false,
              type: "UserNotifications",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AccessToken",
              relationFromFields: [],
              relationName: "AccessTokenToUser",
              relationToFields: [],
              sequence: false,
              type: "AccessToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "AuditLog",
              relationFromFields: [],
              relationName: "AuditLogToUser",
              relationToFields: [],
              sequence: false,
              type: "AuditLog",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "InviteToken",
              relationFromFields: [],
              relationName: "InviteTokenToUser",
              relationToFields: [],
              sequence: false,
              type: "InviteToken",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Member",
              relationFromFields: [],
              relationName: "MemberToUser",
              relationToFields: [],
              sequence: false,
              type: "Member",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "ReleaseVersion",
              relationFromFields: [],
              relationName: "ReleaseVersionToUser",
              relationToFields: [],
              sequence: false,
              type: "ReleaseVersion",
            },
            {
              hasDefaultValue: false,
              isGenerated: false,
              isId: false,
              isList: true,
              isRequired: false,
              kind: "object",
              name: "Snapshot",
              relationFromFields: [],
              relationName: "SnapshotToUser",
              relationToFields: [],
              sequence: false,
              type: "Snapshot",
            },
          ],
          id: "public.User",
          schemaName: "public",
          tableName: "User",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "User_pkey",
              schema: "public",
              table: "User",
              tableId: "public.User",
            },
          ],
        },
        _prisma_migrations: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: false,
              id: "public._prisma_migrations.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "varchar",
            },
            {
              columnName: "checksum",
              hasDefaultValue: false,
              id: "public._prisma_migrations.checksum",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "checksum",
              sequence: false,
              type: "varchar",
            },
            {
              columnName: "finished_at",
              hasDefaultValue: false,
              id: "public._prisma_migrations.finished_at",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "finished_at",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "migration_name",
              hasDefaultValue: false,
              id: "public._prisma_migrations.migration_name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "migration_name",
              sequence: false,
              type: "varchar",
            },
            {
              columnName: "logs",
              hasDefaultValue: false,
              id: "public._prisma_migrations.logs",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "logs",
              sequence: false,
              type: "text",
            },
            {
              columnName: "rolled_back_at",
              hasDefaultValue: false,
              id: "public._prisma_migrations.rolled_back_at",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "rolled_back_at",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "started_at",
              hasDefaultValue: true,
              id: "public._prisma_migrations.started_at",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "started_at",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "applied_steps_count",
              hasDefaultValue: true,
              id: "public._prisma_migrations.applied_steps_count",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "applied_steps_count",
              sequence: false,
              type: "int4",
            },
          ],
          id: "public._prisma_migrations",
          schemaName: "public",
          tableName: "_prisma_migrations",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "_prisma_migrations_pkey",
              schema: "public",
              table: "_prisma_migrations",
              tableId: "public._prisma_migrations",
            },
          ],
        },
        job: {
          fields: [
            {
              columnName: "id",
              hasDefaultValue: true,
              id: "pgboss.job.id",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "id",
              sequence: false,
              type: "uuid",
            },
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "pgboss.job.name",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "priority",
              hasDefaultValue: true,
              id: "pgboss.job.priority",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "priority",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "pgboss.job.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "state",
              hasDefaultValue: true,
              id: "pgboss.job.state",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "state",
              sequence: false,
              type: "job_state",
            },
            {
              columnName: "retrylimit",
              hasDefaultValue: true,
              id: "pgboss.job.retrylimit",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrylimit",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrycount",
              hasDefaultValue: true,
              id: "pgboss.job.retrycount",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrycount",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrydelay",
              hasDefaultValue: true,
              id: "pgboss.job.retrydelay",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrydelay",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "retrybackoff",
              hasDefaultValue: true,
              id: "pgboss.job.retrybackoff",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "retrybackoff",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "startafter",
              hasDefaultValue: true,
              id: "pgboss.job.startafter",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "startafter",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "startedon",
              hasDefaultValue: false,
              id: "pgboss.job.startedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "startedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "singletonkey",
              hasDefaultValue: false,
              id: "pgboss.job.singletonkey",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "singletonkey",
              sequence: false,
              type: "text",
            },
            {
              columnName: "singletonon",
              hasDefaultValue: false,
              id: "pgboss.job.singletonon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "singletonon",
              sequence: false,
              type: "timestamp",
            },
            {
              columnName: "expirein",
              hasDefaultValue: true,
              id: "pgboss.job.expirein",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "expirein",
              sequence: false,
              type: "interval",
            },
            {
              columnName: "createdon",
              hasDefaultValue: true,
              id: "pgboss.job.createdon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "createdon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "completedon",
              hasDefaultValue: false,
              id: "pgboss.job.completedon",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "completedon",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "keepuntil",
              hasDefaultValue: true,
              id: "pgboss.job.keepuntil",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "keepuntil",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "on_complete",
              hasDefaultValue: true,
              id: "pgboss.job.on_complete",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "on_complete",
              sequence: false,
              type: "bool",
            },
            {
              columnName: "output",
              hasDefaultValue: false,
              id: "pgboss.job.output",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "output",
              sequence: false,
              type: "jsonb",
            },
          ],
          id: "pgboss.job",
          schemaName: "pgboss",
          tableName: "job",
          uniqueConstraints: [
            {
              columns: ["id"],
              dirty: false,
              name: "job_pkey",
              schema: "pgboss",
              table: "job",
              tableId: "pgboss.job",
            },
          ],
        },
        schedule: {
          fields: [
            {
              columnName: "name",
              hasDefaultValue: false,
              id: "pgboss.schedule.name",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "name",
              sequence: false,
              type: "text",
            },
            {
              columnName: "cron",
              hasDefaultValue: false,
              id: "pgboss.schedule.cron",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "cron",
              sequence: false,
              type: "text",
            },
            {
              columnName: "timezone",
              hasDefaultValue: false,
              id: "pgboss.schedule.timezone",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "timezone",
              sequence: false,
              type: "text",
            },
            {
              columnName: "data",
              hasDefaultValue: false,
              id: "pgboss.schedule.data",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "data",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "options",
              hasDefaultValue: false,
              id: "pgboss.schedule.options",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "options",
              sequence: false,
              type: "jsonb",
            },
            {
              columnName: "created_on",
              hasDefaultValue: true,
              id: "pgboss.schedule.created_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "created_on",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "updated_on",
              hasDefaultValue: true,
              id: "pgboss.schedule.updated_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "updated_on",
              sequence: false,
              type: "timestamptz",
            },
          ],
          id: "pgboss.schedule",
          schemaName: "pgboss",
          tableName: "schedule",
          uniqueConstraints: [
            {
              columns: ["name"],
              dirty: false,
              name: "schedule_pkey",
              schema: "pgboss",
              table: "schedule",
              tableId: "pgboss.schedule",
            },
          ],
        },
        version: {
          fields: [
            {
              columnName: "version",
              hasDefaultValue: false,
              id: "pgboss.version.version",
              isGenerated: false,
              isId: true,
              isList: false,
              isRequired: true,
              kind: "scalar",
              name: "version",
              sequence: false,
              type: "int4",
            },
            {
              columnName: "maintained_on",
              hasDefaultValue: false,
              id: "pgboss.version.maintained_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "maintained_on",
              sequence: false,
              type: "timestamptz",
            },
            {
              columnName: "cron_on",
              hasDefaultValue: false,
              id: "pgboss.version.cron_on",
              isGenerated: false,
              isId: false,
              isList: false,
              isRequired: false,
              kind: "scalar",
              name: "cron_on",
              sequence: false,
              type: "timestamptz",
            },
          ],
          id: "pgboss.version",
          schemaName: "pgboss",
          tableName: "version",
          uniqueConstraints: [
            {
              columns: ["version"],
              dirty: false,
              name: "version_pkey",
              schema: "pgboss",
              table: "version",
              tableId: "pgboss.version",
            },
          ],
        },
      },
    });
  });
});
